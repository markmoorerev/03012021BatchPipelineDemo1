# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
    - main
  # paths:
  #   include:
  #   - Demos/JavaScriptWithDotnetAPI


pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'


#this installs the newest SDK for this build
steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    packageType: 'sdk'
    version: '5.0.x'
    # performMultiLevelLookup: true
    # includePreviewVersions: true # Required for preview versions

- task: UseDotNet@2
  displayName: 'Install .NET Core Runtime'
  inputs:
    packageType: 'runtime'
    version: '2.x'
    # performMultiLevelLookup: true

#install the nuget packages the project needs
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

#sonarcloud Prepare Analysis Configuration
#follow the instructions on sonarcloud
#add the 'extraProperties' section or you won't get code coverage
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: '03012021BatchSonarcloudToken'
    organization: '03012021batch'
    scannerMode: 'MSBuild'
    projectKey: '03012021Batch_TestDemo'
    projectName: 'TestDemo'
    #the below is from Nicks code and is necessary for code coverage to be published to sonarcloud.
    # extraProperties: 'sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/*/coverage.opencover.xml'

#this will restore and build the directory.
- task: DotNetCoreCLI@2
  displayName: 'building'
  inputs:
    command: 'build'
    projects: '$(solution)'
    # workingDirectory: ''
    arguments: '--configuration $(buildConfiguration)'

# you have to test if you want to print the code coverage.
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/*.sln'
    # the below is necessary for code coverage to work.
    arguments: --configuration $(buildConfiguration) --collect "Code Coverage"
    # testRunTitle: 'dotnet test'

#publish so that SonarCloud can see it.
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '**/coverage.opencover.xml'

- task: SonarCloudAnalyze@1
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  displayName: 'Publishing'
  inputs:
    command: 'publish'
    publishWebProjects: false
    # modifyOutputPath: false
    # workingDirectory: 'Demos/JavaScriptWithDotnetAPI/memesaver'
    projects: '$(solution)'
    zipAfterPublish: true